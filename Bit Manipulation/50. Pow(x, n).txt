stackoverflowerror:
class Solution {
    double res = 1;
    public double myPow(double x, int n) {
        if(n>0){
            res=helper(x,n,res);
            //System.out.println("d"+res);
        }else if(n<0){
            int abs = Math.abs(n);
            res= helper(x,abs,res);
            return 1/res;
        }else{ // n==0
            return 1;
        }
        return res;
    }
    private double helper(double x, int n,double res){
        if(n==0) return res;
        res*=x;
        n-=1;
        //System.out.println(res);
        return helper(x,n,res);
    }
}

//improved:
class Solution {
    public double myPow(double x, int n) {
        if (n == 0) return 1;
        if (x == 1) return 1;
        if (x == -1) {
            if (n % 2 == 0) return 1;
            else return -1;
        }
        if (n == Integer.MIN_VALUE) return 0;
        if (n < 0) {
            n = -n;
            x = 1/x;
        }
        double ret = 1.0;
        while (n > 0) {
            if ((n & 1) != 0) 
                ret *= x;
            x = x * x;
            n = n >> 1;
        }
        return ret;
    }
}