// Using max heap

class Solution {
    public int[][] kClosest(int[][] points, int K) {
        PriorityQueue<int[]> pq = new PriorityQueue<int[]>((p1, p2) -> p2[0] * p2[0] + p2[1] * p2[1] - p1[0] * p1[0] - p1[1] * p1[1]);
        //p1 - p2: from small(head) to large
        //p2 - p1: from large(head) to small
        if(points==null||points.length==0) return null;
        
        for(int[] p:points){
            pq.offer(p); // insert
            if(pq.size()>K) pq.poll(); // remove head
            //System.out.println(pq.poll());
        }
        
        int[][] res = new int[K][2];
        while(K>0){
            res[--K] = pq.poll(); // start from the head
        }
        return res;
    }
}

