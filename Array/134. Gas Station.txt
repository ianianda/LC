KEY: Note there is a little trick that every time we try to find the next start station, we always to back to extend the distance from start to end so that we can check all stations on the circuit. Otherwise, if we move start forward to decrease the distance from start to end, we are likely to end up with only checking part of the circuit. Another trick is we start from the end of the array so as to avoid some corner cases.

class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int start=gas.size()-1, end = 0, sum=gas[start]-cost[start];
        while(end<start){
            if(sum>=0){
                sum+=gas[end]-cost[end];
                ++end;
            }else{
                --start;
                sum+=gas[start]-cost[start];
            }
        }
        return sum>=0?start:-1;
    }
};