dir\n\tsubdir1\n\t\tfile1.ext\n\t\tsubsubdir1\n\tsubdir2\n\t\tsubsubdir2\n\t\t\tfile2.ext

dir\n
  \tsubdir1\n
    \t\tfile1.ext\n
    \t\tsubsubdir1\n
  \tsubdir2\n
    \t\tsubsubdir2\n
       \t\t\tfile2.ext
class Solution {
    public int lengthLongestPath(String input) {
        if(input==null||input.length()==0) return 0;
        int res=0;
        
        Deque<Integer> stack = new ArrayDeque<>();
        String[] arr = input.split("\n");
        int maxLen = 0;
        stack.push(0); //dummy null length
        
        for(String s: arr){
            int numOfTabs = s.lastIndexOf("\t")+1;
            int level = numOfTabs+1;
            while(level<stack.size()){
                stack.poll();
            }
            int curLen=stack.peek()+s.length()-numOfTabs+1;
            stack.push(curLen);
            if(s.contains(".")) maxLen = Math.max(maxLen, curLen-1);
        }
        return maxLen;
    }
}

