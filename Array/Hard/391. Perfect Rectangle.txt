// key:
// the large rectangle area should be equal to the sum of small rectangles
// count of all the points should be even, and that of all the four corner points should be one

class Solution {
    public boolean isRectangleCover(int[][] rectangles) {
        if(rectangles==null||rectangles.length==0) return false;
        int row=rectangles.length, col=rectangles[0].length;
        
        int area=0,x1=Integer.MAX_VALUE,x2=Integer.MIN_VALUE,y1=Integer.MAX_VALUE,y2=Integer.MIN_VALUE;
        
        HashSet<String> set=new HashSet<>();
        
        for(int[] rect:rectangles){
            // to record the outside four points
            x1 = Math.min(rect[0], x1);
            y1 = Math.min(rect[1], y1);
            x2 = Math.max(rect[2], x2);
            y2 = Math.max(rect[3], y2);
            
            area+=(rect[2]-rect[0])*(rect[3]-rect[1]);
            
            String s1=rect[0]+" "+rect[1];
            String s2=rect[0]+" "+rect[3];
            String s3=rect[2]+" "+rect[3];
            String s4=rect[2]+" "+rect[1];
            
            // to count all points.
            if(!set.add(s1)) set.remove(s1);
            if(!set.add(s2)) set.remove(s2);
            if(!set.add(s3)) set.remove(s3);
            if(!set.add(s4)) set.remove(s4);
        }
        // at the end, it should only contain the four points form the largest square.
        if(!set.contains(x1+" "+y1)||!set.contains(x1+" "+y2)||
          !set.contains(x2+" "+y2)||!set.contains(x2+" "+y1)||
          set.size()!=4) return false;
            
        return area==(x2-x1)*(y2-y1);
        
    }
}