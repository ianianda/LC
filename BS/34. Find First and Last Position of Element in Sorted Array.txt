class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res=new int[]{-1,-1};
        if(nums==null||nums.length==0) return res;
        
        int head=helper(nums,target);
        if(head==nums.length||nums[head]!=target) return res;
        int tail=helper(nums,target+1);
        
        return new int[]{head,nums[tail]==target? tail: tail-1};
    }
    private int helper(int[] nums, int target){
        int head=0,tail=nums.length-1;//do not define mid here
        
        while(head+1<tail){//VERY IMPORTANT
            int mid=head+(tail-head)/2;
            if(nums[mid]<target){
                head=mid;//dont +1 or -1 here, because the mid is calculated in the while loop
            }else{
                tail=mid;   
            }
        }
        if(nums[head]==target) return head;
        return tail;
    }
}