Just trying all possibilities for the first two numbers and 
checking whether the rest fits.

class Solution(object):
    def isAdditiveNumber(self,num):
        """
        :type num: str
        :rtype: bool
        """
        n = len(num)
        for i, j in itertools.combinations(range(1, n), 2):
            #print itertools.combination(range(1,n),2)
                # combinations(range(4), 3) --> 012 013 023 123
                # list(itertools.combinations(range(1,6),2))
                    #[(1, 2), (1, 3), (1, 4), (1, 5), 
                    #(2, 3), (2, 4), (2, 5), (3, 4), 
                    #(3, 5), (4, 5)]
            a, b = num[:i], num[i:j]
           
            #The str() function converts the specified value into a string.
            # dealing with leading 0
            if a != str(int(a)) or b != str(int(b)):
                continue
            while j < n:
                c = str(int(a) + int(b))
                #print num.startswith(c,j)
                if not num.startswith(c, j):
                    break
                j += len(c)
                a, b = b, c
            if j == n:
                return True
        return False