class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res=new ArrayList<>();
        if(k<=0||n<=0) return res;
        helper(k,n,new ArrayList<Integer>(),res,1);
        return res;
    }
    private void helper(int k,int n,ArrayList<Integer> temp,List<List<Integer>> res, int index){
        if(n<0||k<0) return;
        if(n==0&&k==0) res.add(new ArrayList<Integer>(temp));
        for(int i=index;i<=9;i++){
            temp.add(i);
            helper(k-1,n-i,temp,res,i+1);
            temp.remove(temp.size()-1);
        }
    }
}