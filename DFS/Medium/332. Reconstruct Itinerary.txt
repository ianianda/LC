class Solution {
    public List<String> findItinerary(String[][] tickets) {
        List<String> res=new ArrayList<>();
        if(tickets==null||tickets.length==0) return res;
        
        Map<String, PriorityQueue<String>> targets = new HashMap<>();
        for(String[] ticket: tickets){
            targets.computeIfAbsent(ticket[0],k->new PriorityQueue()).add(ticket[1]);
        }
        List<String> route = new LinkedList();
        Stack<String> stack = new Stack<>();
        stack.push("JFK"); //must begin with "JFK"
        while(!stack.empty()){
            while(targets.containsKey(stack.peek())&&!targets.get(stack.peek()).isEmpty()){
                stack.push(targets.get(stack.peek()).poll());
            }
            route.add(0,stack.pop());
        }
        return route;
    }
}