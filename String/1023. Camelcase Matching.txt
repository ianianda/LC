class Solution {
    public List<Boolean> camelMatch(String[] queries, String pattern) {
        if(queries==null||queries.length==0) return null;
        
        List<Boolean> res = new ArrayList<>();
        char[] pArr = pattern.toCharArray();
        for (String query : queries) {
            res.add(helper(query.toCharArray(), pArr));
        }
        
        return res;
    }
    
    private boolean helper(char[] query, char[] pattern) {
        int j = 0;
        for (int i = 0; i < query.length; i++) {
            if (j < pattern.length && query[i] == pattern[j]) {
                j++;
            } else if (query[i] >= 'A' && query[i] <= 'Z') {
                return false;
            }
        }
        
        return j == pattern.length;
    }
}