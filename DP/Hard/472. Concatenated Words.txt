class Solution {
    public List<String> findAllConcatenatedWordsInADict(String[] words) {
        if(words==null||words.length==0) return null;
        List<String> res = new ArrayList<>();
        
        Set<String> preWords = new HashSet<>();
        
        // asc words: a-z
        Arrays.sort(words,new Comparator<String>(){
            public int compare(String s1,String s2){
                return s1.length()-s2.length();
            }
        });
        
        for(int i=0;i<words.length;i++){
            if(canForm(words[i],preWords)){
                res.add(words[i]);
            }
            preWords.add(words[i]);
        }
        return res;
    }
    
    private boolean canForm(String word,Set<String> dic){
        if(dic.isEmpty()) return false;
        boolean[] dp=new boolean[word.length()+1];
        dp[0]=true;
        
        //Important
        for(int i=1;i<=word.length();i++){
            for(int j=0;j<i;j++){
                if(!dp[j]) continue;
                if(dic.contains(word.substring(j,i))){
                    dp[i]=true;
                    break;
                }
            }
        }
        return dp[word.length()];
    }
}