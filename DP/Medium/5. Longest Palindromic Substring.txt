palindromic can be in the center. Catch the unique characteristic of the question!!!!
class Solution {
    public String longestPalindrome(String s) {
        int n = s.length(),start=0,end=0;
        if(n==0n==1) return s;
        for(int i=0;is.length()-1;i++){
            int len1=A(i,i,s);if the string length is odd.
            int len2=A(i,i+1,s);if the string length is even.
            int maxLen=Math.max(len1,len2);
            if(maxLenend-start){update start,end to the longest.
                start=i-(maxLen-1)2;
                System.out.println(i);
                end=i+maxLen2;
                System.out.println(end);
            }
        }
        return s.substring(start,end+1);substring not included the end, so need end+1
    }
    
    public int A(int l,int r,String s){
        while(l=0&&rs.length()&&s.charAt(l)==s.charAt(r)){
            l=l-1;
            r=r+1;
        }
        return r-l-1;return the length of the palindromic string.
    }
}

time complexity O(n^2)
space complexity O(1)