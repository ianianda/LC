class Solution {
    public boolean isAnagram(String s, String t) {
        if(s==null&&t==null) return true;
        if(s==null||t==null||s.length()!=t.length()) return false;
        
        HashMap<Integer,Integer> hm = new HashMap<>();
        
        for(int i=0;i<s.length();i++){
            hm.put((s.charAt(i)-'a'),hm.getOrDefault(s.charAt(i)-'a',0)+1);
        }
        for(int i=0;i<t.length();i++){
            if(!hm.containsKey(t.charAt(i)-'a')) return false;
            hm.put(t.charAt(i)-'a',hm.get(t.charAt(i)-'a')-1);
            if(hm.get(t.charAt(i)-'a')==0) hm.remove(t.charAt(i)-'a');
        }
        if(hm.size()!=0) return false;
        return true;
        
    }
}

//Improve:
public boolean isAnagram(String s, String t) {
        int[] alphabet = new int[26];
        for (int i = 0; i < s.length(); i++) alphabet[s.charAt(i) - 'a']++;
        for (int i = 0; i < t.length(); i++) alphabet[t.charAt(i) - 'a']--;
        for (int i : alphabet) if (i != 0) return false;
        return true;
}