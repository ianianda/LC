class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if(s==null||s.length()==0) return 0;
        Map<Character,Integer> map = new HashMap<>();
        int left=0, best=0;
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            map.put(c,map.getOrDefault(c,0)+1);
            
            while(map.size()>k){
                char leftChar = s.charAt(left);
                if(map.containsKey(leftChar)){
                    map.put(leftChar,map.get(leftChar)-1);
                    if(map.get(leftChar)==0){
                        map.remove(leftChar);
                    }
                }
                ++left;
            }
            // important: i-left+1
            best=Math.max(best,i-left+1);
        }
        return best;
        
    }
}