https://leetcode.com/problems/frog-jump/discuss/88824/Very-easy-to-understand-JAVA-solution-with-explanations

class Solution {
    public boolean canCross(int[] stones) {
        if(stones==null||stones.length==0) return true;
        int len=stones.length;
        HashMap<Integer,HashSet<Integer>> map=new HashMap<>(len);
        
        map.put(0,new HashSet<Integer>());
        map.get(0).add(1);
        
        for(int i=1;i<stones.length;i++){
            map.put(stones[i],new HashSet<Integer>());
        }
        
        for(int i=0;i<len-1;i++){
            int stone=stones[i];
            for(int step:map.get(stone)){
                int reach=step+stone;
                if(reach==stones[len-1]){
                    return true;
                }
                HashSet<Integer> set=map.get(reach);
                if(set!=null){
                    set.add(step);
                    if(step-1>0) set.add(step-1);
                    set.add(step+1);
                }
            }
        }
        return false;
    }
}