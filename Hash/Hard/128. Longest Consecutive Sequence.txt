// We will use HashMap. The key thing is to keep track of the sequence length and store that in the boundary points of the sequence. For example, as a result, for sequence {1, 2, 3, 4, 5}, map.get(1) and map.get(5) should both return 5.

class Solution {
    public int longestConsecutive(int[] nums) {
        int res=0;
        if(nums==null||nums.length==0) return 0;
        
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int n:nums){
            /* if map does not have the int */
            if(!map.containsKey(n)){
                int left=map.containsKey(n-1)?map.get(n-1):0;
                int right=map.containsKey(n+1)?map.get(n+1):0;
                
                int sum=left+right+1;
                map.put(n,sum);
                
                res=Math.max(sum,res);
                
                /* IMPORTANT: updates all the elements related to it*/
                map.put(n-left,sum);
                map.put(n+right,sum);
                
            /* if map does contain the int */
            }else{
                continue;
            }
        }
        return res;
        
    }
}