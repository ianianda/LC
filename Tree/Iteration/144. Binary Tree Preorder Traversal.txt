//TLE
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        list = []
        if not root:
            return
        
        while(root):
            list.append(root.val)
            if root.left:
                #list.append(root.left.val)
                root=root.left
            if root.right:
                root=root.right
        
        return list

//IMPROVED
def preorderTraversal(self, root):
        
        list = []
        stack = [root]
        if not root:
            return
        
        while stack:
            node = stack.pop()
            if node:
                list.append(node.val)
                stack.append(node.right)
                stack.append(node.left)
        
        return list